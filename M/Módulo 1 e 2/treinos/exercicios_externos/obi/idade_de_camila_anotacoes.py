# from time import sleep
# from os import system

# def fim_da_execucao():
#     sleep(3)
#     system('cls')

# idades = []
# while True:
#     try:
#         for entrada in range(3):

#             idades.append(int(input('Digite um valor: ')))    
#         idade_de_camila = sorted(idades)
#         print(f'a idade de Camila √©: {idade_de_camila[1]}')
#         fim_da_execucao()
#     except ValueError:
#         idades.clear()
#         print('Digite uma idade v√°lida. (as idadem foram resetadas! )')
#         fim_da_execucao()


# exercicios chatgpt
# A fun√ß√£o map() serve para aplicar uma fun√ß√£o a cada elemento de uma sequ√™ncia iter√°vel (lista, tupla, etc.). Ela n√£o retorna uma lista diretamente, mas sim um iterador, o que significa que seu resultado precisa ser convertido 
# para list() se quisermos v√™-lo como uma lista completa de uma vez.

# continueTente fazer um c√≥digo que pe√ßa ao usu√°rio 5 n√∫meros e exiba o dobro de cada um deles usando map. Se precisar de ajuda, me avise! üòÉ
def dobrar(num):
    return num*2
lista = [10,20,30,40]
print(list(map(dobrar, lista)))


def dobrar(num):
    return num*2

numero = list(map(int, input('Digite apenas 5 n√∫meros separados: ').split()))
print(list(map(dobrar, numero)))

# list -> tem que colocar o list para converter como lista, caso contr√°rio, se ele for colocado fora de um iterador, o valor printado ser√° a aloca√ß√£o na mem√≥ria
# o caso do list √© similar ao closure

# map -> fun√ß√£o map, que ser√° o nosso iterador (parecido com o for)

# no caso acima, int √© um argumento para o par√¢metro fun√ß√£o. Em fun√ß√£o, ser√° colocado oq ele vai fazer com a lista, se √© dobrar os valores, converter para outro tipo, etc.

# numero no caso √© o argumento para o par√¢metro 'sequ√™ncia', onde ser√° colocada a variavel da lista, da tupla, etc.